module.exports=function(e){var t={};function i(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,i),o.l=!0,o.exports}return i.m=e,i.c=t,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)i.d(n,o,function(t){return e[t]}.bind(null,o));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0)}([function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.activate=void 0;const n=i(1);t.activate=function(e){console.log('Congratulations, your extension "vscode-md" is now active!'),e.subscriptions.push(n.MarkdownEditorProvider.register(e))}},function(e,t,i){"use strict";var n=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))((function(o,r){function s(e){try{c(n.next(e))}catch(e){r(e)}}function a(e){try{c(n.throw(e))}catch(e){r(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(s,a)}c((n=n.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.MarkdownEditorProvider=void 0;const o=i(2),r=i(3),s=i(4),a=i(5);let c=(()=>{class e{constructor(e){this.context=e}static register(t){return o.window.registerCustomEditorProvider(e.viewType,new e(t),{webviewOptions:{retainContextWhenHidden:!0}})}resolveCustomTextEditor(e,t,i){return n(this,void 0,void 0,(function*(){t.webview.options={enableScripts:!0},t.webview.html=this.getHtmlForWebview(t.webview);const i=t.webview.asWebviewUri(this.getVditorDist()).toString(),n=t.webview.asWebviewUri(e.uri).toString(!0).replace(/\/[^\/]+?\.\w+$/,"/"),s=o.workspace.getConfiguration("vscode-md");let c="";"relative"===s.image.pathType?c=""===s.image.dirPath?".":r.relative(e.uri.fsPath,s.image.dirPath):"absolute"===s.image.pathType&&(c=s.image.dirPath),console.log("imgPathPrefix: "+c);const u=o.workspace.onDidChangeConfiguration(e=>{e.affectsConfiguration("vscode-md.image.pathType")||e.affectsConfiguration("vscode-md.image.dirPath"),e.affectsConfiguration("vscode-md.options")||e.affectsConfiguration("vscode-md.theme"),console.log("onDidChangeConfiguration")}),d=o.workspace.onDidChangeTextDocument(t=>{t.document.uri.toString(),e.uri.toString(),console.log("onDidChangeTextDocument")}),l=o.workspace.onWillSaveTextDocument(e=>{console.log("willSaveSubscription")}),f=o.workspace.onDidCloseTextDocument(e=>{console.log("onDidCloseTextDocument")});t.onDidDispose(()=>{d.dispose(),u.dispose(),l.dispose(),f.dispose()}),t.webview.onDidReceiveMessage(i=>{switch(i.type){case"save":return void this.updateTextDocument(e,i.text);case"img":let n=i.imgName;const o=i.file,c=Buffer.from(o,"binary");let u;return u=""===s.image.dirPath?r.join(e.uri.fsPath,"..",n):r.join(s.image.dirPath,n),console.log("imgFinalPath: "+u),a.writeFile(u,c,e=>{if(e)throw e}),void t.webview.postMessage({type:"imgSaved"})}}),t.webview.postMessage({type:"all",options:Object.assign({value:e.getText(),cdn:i},s.options),linkBase:n,theme:s.theme,imgConfig:s.image,imgPathPrefix:c})}))}getHtmlForWebview(e){const t=e.asWebviewUri(o.Uri.file(r.join(this.context.extensionPath,"media","vditor","index.min.js"))),i=e.asWebviewUri(o.Uri.file(r.join(this.context.extensionPath,"media","main.js"))),n=e.asWebviewUri(o.Uri.file(r.join(this.context.extensionPath,"media","vditor","index.css"))),a=e.asWebviewUri(o.Uri.file(r.join(this.context.extensionPath,"media","main.css")));s.getNonce();return`\n\t\t\t<!DOCTYPE html>\n\t\t\t<html lang="en">\n\t\t\t<head>\n\t\t\t\t<meta charset="UTF-8">\n\t\t\t\t<link href="${n}" rel="stylesheet"/>\n\t\t\t\t<link href="${a}" rel="stylesheet"/>\n\t\t\t</head>\n      <body>\n          <div id="loading"></div>\n          <div id="vditor"></div>\n\t\t\t\t<script src="${t}"><\/script>\n        <script src="${i}"><\/script>\n\t\t\t</body>\n\t\t\t</html>`}getVditorDist(){return o.Uri.joinPath(this.context.extensionUri,"node_modules","vditor")}updateTextDocument(e,t){const i=Buffer.from(t,"utf8");return o.workspace.fs.writeFile(e.uri,i)}}return e.viewType="myEdit.markdown",e})();t.MarkdownEditorProvider=c},function(e,t){e.exports=require("vscode")},function(e,t){e.exports=require("path")},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.genImgName=t.getNonce=void 0,t.getNonce=function(){let e="";const t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";for(let i=0;i<32;i++)e+=t.charAt(Math.floor(Math.random()*t.length));return e},t.genImgName=function(){return new Date(Date.now()).getTime()}},function(e,t){e.exports=require("fs")}]);
//# sourceMappingURL=extension.js.map